apiVersion: v1
kind: ConfigMap
metadata:
  name: 0xC0DE-config
  namespace: n3r
data:
  config.yaml: |
    # config file
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 0xC0DE
  namespace: n3r
spec:
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: 0xC0DE
  template:
    metadata:
      labels:
        app: 0xC0DE
    spec:
      containers:
      - name: server
        image: ${DEPLOY_IMAGE}
        args:
          - "web"
          - "-vv"
          - "server"
          - "--bind=:8080"
          - "--config=/var/run/0xC0DE/config/config.yaml"
        env:
          - name: "TZ"
            value: "Asia/Seoul"
        ports:
        - name: http
          containerPort: 8080
        - name: admin
          containerPort: 8000
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: 250m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /ping
            port: admin
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ping
            port: admin
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          readOnly: true
          mountPath: /var/run/0xC0DE/config
        - name: volume
          mountPath: /var/run/0xC0DE/volume
      volumes:
      - name: config
        configMap:
          name: 0xC0DE-config
      - name: volume
        persistentVolumeClaim:
          claimName: 0xC0DE-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: 0xC0DE-app
  namespace: n3r
spec:
  selector:
    app: 0xC0DE
  ports:
  - port: 80
    targetPort: http
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: 0xC0DE-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
